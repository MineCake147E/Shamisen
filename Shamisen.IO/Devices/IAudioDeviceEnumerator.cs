using System;
using System.Collections.Generic;
using System.Text;

namespace Shamisen.IO
{
    /// <summary>
    /// Defines a base infrastructure of an audio device enumerator.
    /// </summary>
    [Obsolete("Use either IAudioInputDeviceEnumerator or IAudioOutputDeviceEnumerator instead!")]
    public interface IAudioDeviceEnumerator
    {
        
    }

    /// <summary>
    /// Defines a base infrastructure of an audio input device enumerator.
    /// </summary>
    /// <typeparam name="TAudioInputDevice">The type of audio input device objects.</typeparam>
    /// <typeparam name="TSoundIn">The type of <see cref="ISoundIn"/> to be generated by devices.</typeparam>
    /// <typeparam name="TAudioDeviceConfiguration">The type of <see cref="IAudioDeviceConfiguration"/> to generate <see cref="ISoundIn"/>.</typeparam>
    /// <typeparam name="TAudioDeviceConfigurationBuilder">The type of <see cref="IAudioDeviceConfigurationBuilder{TAudioDeviceConfiguration}"/> to generate <typeparamref name="TAudioDeviceConfiguration"/>.</typeparam>
    public interface IAudioInputDeviceEnumerator<TAudioInputDevice, TSoundIn, TAudioDeviceConfiguration, TAudioDeviceConfigurationBuilder>
        where TAudioInputDevice: IAudioInputDevice<TSoundIn, TAudioDeviceConfiguration, TAudioDeviceConfigurationBuilder>
        where TSoundIn : class, ISoundIn where TAudioDeviceConfiguration : IAudioDeviceConfiguration
        where TAudioDeviceConfigurationBuilder : IAudioDeviceConfigurationBuilder<TAudioDeviceConfiguration>, new()
    {
        /// <summary>
        /// Enumerates audio devices that supports audio input.
        /// </summary>
        /// <returns>The <see cref="IEnumerable{T}"/> of audio input devices.</returns>
        IEnumerable<TAudioInputDevice> EnumerateDevices();

        /// <summary>
        /// Asynchronously enumerates audio devices that supports audio input.
        /// </summary>
        /// <returns>The <see cref="IAsyncEnumerable{T}"/> of audio input devices.</returns>
        IAsyncEnumerable<TAudioInputDevice> EnumerateDevicesAsync();
    }
    /// <summary>
    /// Defines a base infrastructure of an audio output device enumerator.
    /// </summary>
    /// <typeparam name="TAudioOutputDevice">The type of audio output device objects.</typeparam>
    /// <typeparam name="TSoundOut">The type of <see cref="ISoundOut"/> to be generated by devices.</typeparam>
    /// <typeparam name="TAudioDeviceConfiguration">The type of <see cref="IAudioDeviceConfiguration"/> to generate <see cref="ISoundOut"/>.</typeparam>
    /// <typeparam name="TAudioDeviceConfigurationBuilder">The type of <see cref="IAudioDeviceConfigurationBuilder{TAudioDeviceConfiguration}"/> to generate <typeparamref name="TAudioDeviceConfiguration"/>.</typeparam>
    public interface IAudioOutputDeviceEnumerator<TAudioOutputDevice, TSoundOut, TAudioDeviceConfiguration, TAudioDeviceConfigurationBuilder>
        where TAudioOutputDevice : IAudioOutputDevice<TSoundOut, TAudioDeviceConfiguration, TAudioDeviceConfigurationBuilder>
        where TSoundOut : class, ISoundOut where TAudioDeviceConfiguration : IAudioDeviceConfiguration
        where TAudioDeviceConfigurationBuilder : IAudioDeviceConfigurationBuilder<TAudioDeviceConfiguration>, new()
    {
        /// <summary>
        /// Enumerates audio devices that supports audio output.
        /// </summary>
        /// <returns>The <see cref="IEnumerable{T}"/> of audio output devices.</returns>
        IEnumerable<TAudioOutputDevice> EnumerateDevices();

        /// <summary>
        /// Asynchronously enumerates audio devices that supports audio output.
        /// </summary>
        /// <returns>The <see cref="IAsyncEnumerable{T}"/> of audio output devices.</returns>
        IAsyncEnumerable<TAudioOutputDevice> EnumerateDevicesAsync();
    }
}