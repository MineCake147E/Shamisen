<#@ template debug="false" hostspecific="true" linePragmas="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
var regex = new Regex("\"([^\"]*)\",\\s+\"([^\"]*)\",\\s+\"([^\"]*)\",\\s+\"([^\"]*)\",", RegexOptions.Compiled);
var text = File.ReadAllText(this.Host.ResolvePath("..\\..\\CodeGeneration\\Formats.csv"));
var lines = text.Split('\n').Where(a=>!string.IsNullOrWhiteSpace(a));
var formatsStr = lines.Skip(1).Select(a=>regex.Match(a).Groups.OfType<Group>().Skip(1).Select(j => j.Value).ToArray());
var formats = formatsStr.Select(a => (a[0], a[1], a[2], a[3])).TakeWhile(h => h.Item4 != "0xFFFEu");
#>
// <auto-generated />
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY T4. DO NOT CHANGE IT. CHANGE THE .tt FILE INSTEAD.
// </auto-generated>
using System;
using Shamisen;

namespace Shamisen.Codecs.Waveform
{
    /// <summary>
    /// Represents a sub format for <see cref="ExtensibleWaveFormat.SubFormat"/>.
    /// </summary>
    public static partial class WaveformSubFormats
    {
<#foreach(var h in formats){#>
        /// <summary>
        /// <#=h.Item1#>
        /// </summary>
        public static readonly Guid <#=h.Item2#> = AudioEncoding.<#=h.Item2#>.ToGuid();
<#}#>
    }
}
