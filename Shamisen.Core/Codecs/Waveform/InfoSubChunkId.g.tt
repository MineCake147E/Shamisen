<#@ template debug="false" hostspecific="true" linePragmas="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="netstandard" #>
<#@ assembly name="$(UserProfile)\.nuget\packages\system.memory\4.5.4\lib\netstandard2.0\System.Memory.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Buffers.Binary" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
static uint ToUInt32LittleEndian(string value) => BinaryPrimitives.ReadUInt32LittleEndian(Encoding.UTF8.GetBytes(value).AsSpan());
var regex = new Regex("\"((\"\"|[^\"])*)\",\\s+\"([^\"]*)\",\\s+\"([^\"]*)\",\\s+\"([^\"]*)\"", RegexOptions.Compiled);
var text = File.ReadAllText(this.Host.ResolvePath("..\\..\\CodeGeneration\\InfoSubChunkIds.csv"));
var lines = text.Split('\n').Where(a=>!string.IsNullOrWhiteSpace(a));
var parsedCsv = lines.Skip(1).Select(a=>regex.Match(a).Groups.OfType<Group>().Skip(1).Select(j => j.Value).ToArray());
var scids = parsedCsv.Select(a => (a[0].Replace("\"\"","\""), a[2], a[3], a[4]));

#>
// <auto-generated />
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY T4. DO NOT CHANGE IT. CHANGE THE .tt FILE INSTEAD.
// Generated at <#=DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss.ffffff") #>
// </auto-generated>
using System;
using Shamisen;

namespace Shamisen.Codecs.Waveform
{
    /// <summary>
    /// Represents a subchunk ID for waveform "LIST" chunk in Little Endian.
    /// </summary>
    public enum InfoSubChunkId : uint
    {
<#foreach(var h in scids){#>
        /// <summary>
        /// <#=h.Item1#>
        /// </summary>
        <#=h.Item2#> = <#=ToUInt32LittleEndian(h.Item4)#>,
<#}#>
    }
}
