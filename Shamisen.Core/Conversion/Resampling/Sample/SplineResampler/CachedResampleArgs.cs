#if NET || NETSTANDARD || NETCOREAPP
// <auto-generated />
using System;
using System.Numerics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using Shamisen.Utils;
using Shamisen.Utils.Numerics;
#endif
#if NETCOREAPP3_1_OR_GREATER
using System.Runtime.Intrinsics;
using System.Runtime.Intrinsics.X86;

#endif
#if NET5_0_OR_GREATER
using System.Runtime.Intrinsics.Arm;
#endif
namespace Shamisen.Conversion.Resampling.Sample
{
    [StructLayout(LayoutKind.Sequential)]
    internal readonly struct CachedResampleArgs
    {
        readonly Vector4Int32 values;
        public int ConversionGradient
        {
            [MethodImpl(OptimizationUtils.InlineAndOptimizeIfPossible)]
            get
            {
                return values.X;
            }
        }

        public int RateMul
        {
            [MethodImpl(OptimizationUtils.InlineAndOptimizeIfPossible)]
            get
            {
                return values.Y;
            }
        }

        public int GradientIncrement
        {
            [MethodImpl(OptimizationUtils.InlineAndOptimizeIfPossible)]
            get
            {
                return values.Z;
            }
        }

        public int IndexIncrement
        {
            [MethodImpl(OptimizationUtils.InlineAndOptimizeIfPossible)]
            get
            {
                return values.W;
            }
        }
        public CachedResampleArgs(int x, int ram, int acc, int facc)
        {
            values = new(x, ram, acc, facc);
        }
    }
}
